<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.campuslostsearch.mapper.ComplaintMapper">
    <insert id="insert" parameterType="Complaint">
        INSERT INTO complaint (
            complaint_id, user_id, claim_id, category,
            reason, admin_feedback, status, create_time
        ) VALUES (
            #{complaintId}, #{userId}, #{claimId}, #{category},
            #{reason}, #{adminFeedback}, #{status}, #{createTime}
        )
    </insert>
    
    <select id="findByUserId" resultMap="ComplaintResultMap">
        SELECT c.*, 
               cl.description as claim_description,
               cl.item_id, cl.item_type,
               CASE cl.item_type 
                   WHEN 0 THEN l.item_name 
                   WHEN 1 THEN f.item_name 
               END as item_name,
               u.username as complainant_name
        FROM complaint c
        JOIN claim cl ON c.claim_id = cl.claim_id
        JOIN user u ON c.user_id = u.user_id
        LEFT JOIN lost_item l ON cl.item_type = 0 AND cl.item_id = l.lost_item_id
        LEFT JOIN found_item f ON cl.item_type = 1 AND cl.item_id = f.found_item_id
        WHERE c.user_id = #{userId}
        <if test="status != null">
            AND c.status = #{status}
        </if>
        ORDER BY c.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="countByUserId" resultType="Long">
        SELECT COUNT(*)
        FROM complaint
        WHERE user_id = #{userId}
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>
    
    <select id="findPendingComplaints" resultMap="ComplaintResultMap">
        SELECT c.*, 
               cl.description as claim_description,
               cl.item_id, cl.item_type,
               CASE cl.item_type 
                   WHEN 0 THEN l.item_name 
                   WHEN 1 THEN f.item_name 
               END as item_name,
               u.username as complainant_name
        FROM complaint c
        JOIN claim cl ON c.claim_id = cl.claim_id
        JOIN user u ON c.user_id = u.user_id
        LEFT JOIN lost_item l ON cl.item_type = 0 AND cl.item_id = l.lost_item_id
        LEFT JOIN found_item f ON cl.item_type = 1 AND cl.item_id = f.found_item_id
        WHERE c.status = 0
        ORDER BY c.create_time ASC
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="countPendingComplaints" resultType="Long">
        SELECT COUNT(*)
        FROM complaint
        WHERE status = 0
    </select>
    
    <select id="findById" resultMap="ComplaintResultMap">
        SELECT c.*, 
               cl.description as claim_description,
               cl.item_id, cl.item_type,
               CASE cl.item_type 
                   WHEN 0 THEN l.item_name 
                   WHEN 1 THEN f.item_name 
               END as item_name,
               u.username as complainant_name
        FROM complaint c
        JOIN claim cl ON c.claim_id = cl.claim_id
        JOIN user u ON c.user_id = u.user_id
        LEFT JOIN lost_item l ON cl.item_type = 0 AND cl.item_id = l.lost_item_id
        LEFT JOIN found_item f ON cl.item_type = 1 AND cl.item_id = f.found_item_id
        WHERE c.complaint_id = #{complaintId}
    </select>
    
    <update id="updateStatus">
        UPDATE complaint 
        SET status = 1,
            admin_feedback = #{adminFeedback}
        WHERE complaint_id = #{complaintId}
    </update>
    
    <select id="countByUserIdWithinPeriod" resultType="Long">
        SELECT COUNT(*)
        FROM complaint
        WHERE user_id = #{userId}
        AND create_time >= #{startTime}
    </select>
    
    <resultMap id="ComplaintResultMap" type="Complaint">
        <id property="complaintId" column="complaint_id"/>
        <result property="userId" column="user_id"/>
        <result property="claimId" column="claim_id"/>
        <result property="category" column="category"/>
        <result property="reason" column="reason"/>
        <result property="adminFeedback" column="admin_feedback"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="complainantName" column="complainant_name"/>
        <result property="claimDescription" column="claim_description"/>
        <result property="itemId" column="item_id"/>
        <result property="itemName" column="item_name"/>
        <result property="itemType" column="item_type"/>
    </resultMap>
</mapper> 