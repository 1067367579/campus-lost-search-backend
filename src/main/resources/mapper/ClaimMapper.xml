<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.campuslostsearch.mapper.ClaimMapper">
    <insert id="insert" parameterType="Claim">
        INSERT INTO claim (
            claim_id, user_id, item_id, item_type,
            description, status, create_time
        ) VALUES (
            #{claimId}, #{userId}, #{itemId}, #{itemType},
            #{description}, #{status}, #{createTime}
        )
    </insert>
    
    <resultMap id="ClaimResultMap" type="Claim">
        <id property="claimId" column="claim_id"/>
        <result property="userId" column="user_id"/>
        <result property="itemId" column="item_id"/>
        <result property="itemType" column="item_type"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="itemName" column="item_name"/>
    </resultMap>
    
    <select id="findByUserId" resultMap="ClaimResultMap">
        SELECT c.*, 
            CASE c.item_type 
                WHEN 0 THEN l.item_name 
                WHEN 1 THEN f.item_name 
            END as item_name
        FROM claim c
        LEFT JOIN lost_item l ON c.item_type = 0 AND c.item_id = l.lost_item_id
        LEFT JOIN found_item f ON c.item_type = 1 AND c.item_id = f.found_item_id
        WHERE c.user_id = #{userId}
        <if test="status != null">
            AND c.status = #{status}
        </if>
        ORDER BY c.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="countByUserId" resultType="Long">
        SELECT COUNT(*)
        FROM claim
        WHERE user_id = #{userId}
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>
    
    <select id="findById" resultMap="ClaimResultMap">
        SELECT c.*, 
            CASE c.item_type 
                WHEN 0 THEN l.item_name 
                WHEN 1 THEN f.item_name 
            END as item_name
        FROM claim c
        LEFT JOIN lost_item l ON c.item_type = 0 AND c.item_id = l.lost_item_id
        LEFT JOIN found_item f ON c.item_type = 1 AND c.item_id = f.found_item_id
        WHERE c.claim_id = #{claimId}
    </select>
    
    <update id="updateStatus">
        UPDATE claim 
        SET status = #{status}
        WHERE claim_id = #{claimId}
    </update>
    
    <select id="findByItemId" resultType="Claim">
        SELECT * FROM claim 
        WHERE item_id = #{itemId} 
        AND item_type = #{itemType}
    </select>
    
    <select id="countPendingClaims" resultType="Long">
        SELECT COUNT(*) FROM claim WHERE status = 0
    </select>
    
    <update id="updateLostItemStatus">
        UPDATE lost_item SET status = #{status} WHERE lost_item_id = #{itemId}
    </update>
    
    <update id="updateFoundItemStatus">
        UPDATE found_item SET status = #{status} WHERE found_item_id = #{itemId}
    </update>
</mapper> 